config:
  target: 'http://localhost:3000'
  phases:
    - duration: 60
      arrivalRate: 1  # Only 1 user
      name: "Single User Debug Test"
  defaults:
    headers:
      'User-Agent': 'Artillery Load Test'
  processor: './debug-processor.js'

scenarios:
  - name: "Debug File Upload Flow"
    weight: 100
    flow:
      # Step 1: Set authentication
      - function: "logStep"
      - function: "setAuth"
      
      # Step 2: Access dashboard
      - function: "logStep"
      - get:
          url: "/dashboard"
          headers:
            Cookie: "{{ sessionCookie }}"
          capture:
            - json: "$"
              as: "dashboardResponse"
          afterResponse: "logResponse"
      
      # Step 3: Upload file with detailed logging
      - function: "logStep"
      - post:
          url: "/api/upload"
          headers:
            Cookie: "{{ sessionCookie }}"
          formData:
            file: "@test-files/test.m4a"
            userId: "{{ userId }}"
          capture:
            - json: "$.fileId"
              as: "fileId"
            - json: "$.message"
              as: "uploadMessage"
            - json: "$"
              as: "uploadResponse"
          afterResponse: "logUploadResponse"
      
      # Step 4: Wait and check processing
      - function: "logStep"
      - think: 5
      
      # Step 5: Check transcription status
      - function: "logStep"
      - get:
          url: "/api/transcriptions/{{ fileId }}"
          headers:
            Cookie: "{{ sessionCookie }}"
          capture:
            - json: "$"
              as: "transcriptionResponse"
          afterResponse: "logTranscriptionResponse"
      
      # Step 6: Final status check
      - function: "logStep"
      - think: 3
      - get:
          url: "/api/files"
          headers:
            Cookie: "{{ sessionCookie }}"
          capture:
            - json: "$"
              as: "filesResponse"
          afterResponse: "logFilesResponse"